import React, { Component } from 'react'
import NewsItem from './NewsItem'
import Spinner from './Spinner'
import PropTypes from 'prop-types'


export default class New extends Component {

    static defaultProps = {
        country: 'in',
        pageSize: 9,
        category: 'general'
    }

    static propTypes = {
        country: PropTypes.string,
        pageSize: PropTypes.number,
        category: PropTypes.string
    }

    capitalizeFirstLetter(string) {
        return string.charAt(0).toUpperCase() + string.slice(1);
    }

    constructor(props) {

        super(props);
        this.state = {

            articles: [],
            loading: false,
            page: 1
        }

        if (this.props.category=="general"){
            document.title = "NewsMonkey | Top headlines"
        }

        else{
            document.title = `${this.capitalizeFirstLetter(this.props.category)} | NewsMonkey`;
        }
        
    }

    async componentDidMount() {

        this.setState({ loading: true });
        let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=27421effc3054b1bbb7d2ca86e8c147a&page=1&pageSize=${this.props.pageSize}`;
        let data = await fetch(url);
        let parsedData = await data.json();

        this.setState({
            articles: parsedData.articles,
            totalResults: parsedData.totalResults,
            loading: false
        })
    }

    handlePrevClick = async () => {

        let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=27421effc3054b1bbb7d2ca86e8c147a&page=${this.state.page - 1}&pageSize=${this.props.pageSize}`;
        this.setState({ loading: true });
        let data = await fetch(url);
        let parsedData = await data.json();

        this.setState({
            page: this.state.page - 1,
            articles: parsedData.articles,
            loading: false
        })
    }

    handleNextClick = async () => {

        if (!(this.state.page + 1 > Math.ceil(this.state.totalResults / this.props.pageSize))) {

            let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=27421effc3054b1bbb7d2ca86e8c147a&page=${this.state.page + 1}&pageSize=${this.props.pageSize}`;
            this.setState({ loading: true });
            let data = await fetch(url);
            let parsedData = await data.json();

            this.setState({
                page: this.state.page + 1,
                articles: parsedData.articles,
                loading: false
            })
        }

    }

    render() {
        return (
            <div className="container my-3">
                <div className="devarsh-header">
                    <h1 className="text-center devarsh">NewsMonkey</h1>
                </div>

                <div >
                    <br />
                    <br />
                    <div className="devarsh-subheader" id="change">
                        <hr />
                        <h2 className="text-center devarsh-text" style={{ textTransform: 'capitalize'}} >{this.props.category} headlines</h2>
                        <hr />
                    </div>
                </div>

                {this.state.loading && <Spinner />}
                <br />


                <div className="row">
                    {!this.state.loading && this.state.articles.map((element) => {

                        return <div className="col-md-4" key={element.url}>
                            <NewsItem title={element.title} description={element.description} imageUrl={element.urlToImage} newsUrl={element.url} author={element.author} date={element.publishedAt} source={element.source} />
                        </div>
                    })}

                    <br />
                    <hr />

                    <div className="">
                        <div className=" my-4 container d-flex justify-content-around exclude">
                            <button disabled={this.state.page <= 1} type="button" onClick={this.handlePrevClick} className="btn btn-primary"> &larr; Previous</button>
                            <h4 style={{color: 'white'}}>Page {this.state.page} of {Math.ceil(this.state.totalResults / this.props.pageSize)}</h4>
                            <button disabled={this.state.page + 1 > Math.ceil(this.state.totalResults / this.props.pageSize)} type="button" onClick={this.handleNextClick} className="btn btn-primary">Next &rarr;</button>
                        </div>
                    </div>
                    

                </div>
            </div>
        )
    }
}